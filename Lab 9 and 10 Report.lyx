#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass amsart
\begin_preamble
\usepackage[framed, numbered]{matlab-prettifier}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language australian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "palatino" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "style={Matlab-editor}"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
MAE2403 Lab 9 and 10
\end_layout

\begin_layout Author
Alwin Wang
\begin_inset Newline newline
\end_inset

2510 2176
\end_layout

\begin_layout Date
24th October 2016
\end_layout

\begin_layout Section
Laboratory 9
\end_layout

\begin_layout Problem
Use the Crank-Nicolson method to solve 
\begin_inset Formula 
\[
\frac{\partial T}{\partial t}=\frac{\partial^{2}T}{\partial x^{2}}+\frac{\partial^{2}T}{\partial\partial y^{2}}+\lambda\frac{\partial T}{\partial x}
\]

\end_inset

where 
\begin_inset Formula $\lambda=-3.0$
\end_inset

 and the solution domain is a square plate 
\begin_inset Formula $0.0\leq x\leq2.0$
\end_inset

 and 
\begin_inset Formula $0.0\leq y\leq2.0$
\end_inset

.
 The initial conditions are 
\begin_inset Formula $T\left(x=0,t=0\right)=6.0$
\end_inset

, 
\begin_inset Formula $T\left(x\ne0,t=0\right)=0.0$
\end_inset

 and the temperature on the four edges is kept constant thereafter.
 Use 
\begin_inset Formula $\Delta x=\Delta y=0.5$
\end_inset

 and 
\begin_inset Formula $\Delta t=0.1$
\end_inset

.
\end_layout

\begin_layout Problem
Solution: See Appendix 1.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Problem
Use the finite element method to find the steady-state solution for the
 heat equation 
\begin_inset Formula 
\[
\frac{d^{2}T}{dx^{2}}=-f\left(x\right)
\]

\end_inset

where the domain is a one-dimensional thin rod of length 10cm with boundary
 condition 
\begin_inset Formula $T\left(0\right)=40$
\end_inset

 and 
\begin_inset Formula $T\left(10\right)=100$
\end_inset

 and uniform heat resource of 
\begin_inset Formula $f\left(x\right)=10$
\end_inset

.
 The analytical solution is 
\begin_inset Formula $T\left(x\right)=-5x^{2}+66x+40$
\end_inset

.
\end_layout

\begin_layout Problem
(1) Hand calculation: See Appendix 2
\end_layout

\begin_layout Problem
(2) The MATLAB code is not included as it is already available on Moodle.
\end_layout

\begin_layout Problem
\begin_inset space \qquad{}
\end_inset

(a) 4 Element solution
\end_layout

\begin_layout Problem
\begin_inset Graphics
	filename Lab 9 Question 2 Figure 1.eps

\end_inset


\end_layout

\begin_layout Problem
It can be seen that when ns = 4 the Finite Element Method is able to follow
 the trend of the analytical solution and does not appear to have any propagatio
n error.
 In fact, at the 5 nodes, the FEM result appears to be the exact same as
 the analytical solution.
 
\end_layout

\begin_layout Problem
However, for each of the 4 elements there is an error 'inside' the element
 as the FEM result is linear whereas the analytical solution is non-linear.
 This could be fixed by a non-leaner interpolation (potentially mathematically
 hard) or an increase the number of nodes (potentially computationally hard).
\end_layout

\begin_layout Problem
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Problem
\begin_inset space \qquad{}
\end_inset

(b) Varying the number of elements
\end_layout

\begin_layout Problem
The line 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

ns = 4
\end_layout

\end_inset

 is changed in MATLAB is shown below and the outputs for ns = 2, 6, 8 and
 10 are shown below.
\end_layout

\begin_layout Problem
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "48col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
\begin_inset Formula 
\[
ns=2
\]

\end_inset


\begin_inset Graphics
	filename Lab 9 Question 2 Figure 2.eps
	width 80text%

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "48col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
\begin_inset Formula 
\[
ns=6
\]

\end_inset


\begin_inset Graphics
	filename Lab 9 Question 2 Figure 3.eps
	width 80text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Problem
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "48col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
\begin_inset Formula 
\[
ns=8
\]

\end_inset


\begin_inset Graphics
	filename Lab 9 Question 2 Figure 4.eps
	width 80text%

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "48col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
\begin_inset Formula 
\[
ns=10
\]

\end_inset


\begin_inset Graphics
	filename Lab 9 Question 2 Figure 5.eps
	width 80text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Problem
First of all, it is clear that the FEM result always matches the analytical
 solution at the node regardless of the number of nodes.
 This indicates that if a single point is required, a very low number of
 ns could be used and still give an accurate solution for a particular x
 value.
 
\end_layout

\begin_layout Problem
However, inside the element itself the smaller the number of elements the
 worse the linear interpolation.
 For example when ns = 2 there is a large error inside the element compared
 to ns = 10.
 At ns = 8 and 10 the error is almost negligible which indicates that FEM
 will converge to the analytical solution at large ns values meaning FEM
 is consistent.
\end_layout

\begin_layout Problem
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Problem
(3) Unequally spaced nodes for Finite Element Method.
\end_layout

\begin_layout Problem
\begin_inset space \qquad{}
\end_inset

(a) The MATLAB modification required is shown below.
\end_layout

\begin_layout Problem
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
Old
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "firstnumber=11"
inline false
status open

\begin_layout Plain Layout

% defining the element mesh
\end_layout

\begin_layout Plain Layout

xmin=0.; xmax=10.0;
\end_layout

\begin_layout Plain Layout

ns=10;
\end_layout

\begin_layout Plain Layout

dx=(xmax-xmin)/ns;
\end_layout

\begin_layout Plain Layout

x=[xmin:dx:xmax];
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "firstnumber=33"
inline false
status open

\begin_layout Plain Layout

for ii=1:ns
\end_layout

\begin_layout Plain Layout

   c=1/dx;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "firstnumber=43"
inline false
status open

\begin_layout Plain Layout

       end
\end_layout

\begin_layout Plain Layout

       F(k) = F(k) + ff*dx/2;
\end_layout

\begin_layout Plain Layout

   end
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset space \hfill{}
\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "45col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
New
\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "firstnumber=11"
inline false
status open

\begin_layout Plain Layout

% defining the element mesh
\end_layout

\begin_layout Plain Layout

xmin=0.; xmax=10.0;
\end_layout

\begin_layout Plain Layout

x=[xmin 2.5 5 6.25 7.5 8.75 xmax];
\end_layout

\begin_layout Plain Layout

ns=length(x)-1;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "firstnumber=33"
inline false
status open

\begin_layout Plain Layout

for ii=1:ns
\end_layout

\begin_layout Plain Layout

   c=1/(x(ii+1)-x(ii));
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset listings
lstparams "firstnumber=43"
inline false
status open

\begin_layout Plain Layout

       end
\end_layout

\begin_layout Plain Layout

       F(k) = F(k) + ff*(x(ii+1)-x(ii))/2
\end_layout

\begin_layout Plain Layout

   end
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Problem
The idea behind this change is that the solution domain, vector 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

x
\end_layout

\end_inset

, needs to be defined first and then the number of elements, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

nx
\end_layout

\end_inset

, determined.
 The variable 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

dx
\end_layout

\end_inset

 is no longer needed as the length of each element is no longer constant.
 Thus, when looping through each element the element length is no longer
 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

dx
\end_layout

\end_inset

, it is the difference between the next node, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

x(ii+1)
\end_layout

\end_inset

, and the current node, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

x(ii)
\end_layout

\end_inset

.
 Thus, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

dx
\end_layout

\end_inset

 is replaced with 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

x(ii + 1) - x(ii)
\end_layout

\end_inset

 everywhere in the code.
\end_layout

\begin_layout Problem
\begin_inset space \qquad{}
\end_inset

(b) The solution of the unequal spacing mesh is shown below.
\end_layout

\begin_layout Problem
It can be seen that even with unequal spacing, the solution at each of the
 nodes is still exact (i.e.
 the same as the analytical solution).
 The general shape of the trend is still captured and there is still some
 interpolation error inside the element but it is believed that if the spacing
 was adjusted to match the variation then the solution would be very accurate.
\end_layout

\begin_layout Problem
\begin_inset Graphics
	filename Lab 9 Question 3 Figure 1.eps

\end_inset


\end_layout

\begin_layout Problem
\begin_inset space \qquad{}
\end_inset

(c) Comparison of meshes
\end_layout

\begin_layout Problem
The unequal mesh contained 6 elements and this solution can be compared
 to the 4, 6 and 8 element results from 2(b).
 It is clear that the addition of the nodes at 6.25 and 8.75 increases the
 accuracy of the solution in the domain 
\begin_inset Formula $5\leq x\leq10$
\end_inset

 compared to the 4 element solution.
 However, it is also seen that the addition of these does not increase the
 accuracy of the solution in the domain 
\begin_inset Formula $0\leq x\leq5$
\end_inset

 as it appears the exact same as the 4 element solution in this region.
 It can also be seen that the unequal mesh is more accurate that the 6 element
 solution in the 
\begin_inset Formula $5\leq x\leq10$
\end_inset

 region and less accurate in the 
\begin_inset Formula $0\leq x\leq5$
\end_inset

 region.
\end_layout

\begin_layout Problem
Thus, the accuracy of the unequal mesh is seen to be better at higher density
 areas and lower at lower density areas.
 This is in contrast to increasing the value of ns which simply increases
 the overall accuracy of the solution over the whole solution domain.
\end_layout

\begin_layout Section
Laboratory 10
\end_layout

\begin_layout Problem
Digital Audio Signal Filtering
\end_layout

\begin_layout Problem
(a) See MATLAB code below.
\end_layout

\begin_layout Problem
(b) See MATLAB code below.
\end_layout

\begin_layout Problem
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

% MATLAB can use inbuilt function wavread(...) to read in audio wav file.
 
\end_layout

\begin_layout Plain Layout

% MATLAB can output digital signal to a wav file by using wavwrite(...)
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

% y:        the read-in digital signal
\end_layout

\begin_layout Plain Layout

% fs:       sample rate in Hertz, i.e., dt=1/fs.
\end_layout

\begin_layout Plain Layout

% nbits:    number of bit per sample used to encord the data in file.
\end_layout

\begin_layout Plain Layout

%
\end_layout

\begin_layout Plain Layout

%%%
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

clc; 
\end_layout

\begin_layout Plain Layout

clear all;
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

% Using wavread to read digital audio file 'triangle.wav'.
 This file should
\end_layout

\begin_layout Plain Layout

% be put in the same directory of this m-file.
\end_layout

\begin_layout Plain Layout

[y, fs] = audioread('triangle.wav');
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

% Use the inbuilt MATLAB sound function to play the audio at the original
 sample
\end_layout

\begin_layout Plain Layout

% rate.
\end_layout

\begin_layout Plain Layout

disp('Playing at the original sample rate.');
\end_layout

\begin_layout Plain Layout

sound(y, fs);
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

% The FFT of the digital signal.
\end_layout

\begin_layout Plain Layout

Y = fft(y);
\end_layout

\begin_layout Plain Layout

%Own notes:
\end_layout

\begin_layout Plain Layout

% MATLAB stores this as the positive then negative values,
\end_layout

\begin_layout Plain Layout

% so we need to generate a frequency vector that is positive
\end_layout

\begin_layout Plain Layout

% then negative!!
\end_layout

\begin_layout Plain Layout

 
\end_layout

\begin_layout Plain Layout

%% Generate the frequncy.
\end_layout

\begin_layout Plain Layout

Fc = fs/2;
\end_layout

\begin_layout Plain Layout

N=length(y);
\end_layout

\begin_layout Plain Layout

freq = Fc*linspace(0,1,N/2);
\end_layout

\begin_layout Plain Layout

freq2 = cat(2,freq,freq(1:N/2)-Fc);
\end_layout

\begin_layout Plain Layout

% put your code here
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Plot of power spectrum
\end_layout

\begin_layout Plain Layout

figure
\end_layout

\begin_layout Plain Layout

plot(freq2,abs(Y)/N);
\end_layout

\begin_layout Plain Layout

title('Amplitude Spectrum of y(t)')
\end_layout

\begin_layout Plain Layout

xlabel('Frequency (Hz)')
\end_layout

\begin_layout Plain Layout

ylabel('|Y(f)|')
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% applying low pass filter
\end_layout

\begin_layout Plain Layout

f_cutoff = 0.45*10^4; % given in question
\end_layout

\begin_layout Plain Layout

filt = exp(-(freq2/f_cutoff).^20);
\end_layout

\begin_layout Plain Layout

Filt_Y = Y.*filt';
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% plotting out the normalised power spectrum
\end_layout

\begin_layout Plain Layout

figure
\end_layout

\begin_layout Plain Layout

plot(freq2,abs(Filt_Y)/N);
\end_layout

\begin_layout Plain Layout

title('Low Pass of Y(t)')
\end_layout

\begin_layout Plain Layout

xlabel('Frequency (Hz)')
\end_layout

\begin_layout Plain Layout

ylabel('|Y(f)|')
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%% inverse FFT
\end_layout

\begin_layout Plain Layout

filt_y = ifft(Filt_Y);
\end_layout

\begin_layout Plain Layout

% save the wav file and reply.
\end_layout

\begin_layout Plain Layout

audiowrite('trianglelowpass.wav', filt_y, fs);
\end_layout

\begin_layout Plain Layout

[filt_y, fs]=audioread('trianglelowpass.wav');
\end_layout

\begin_layout Plain Layout

pause(5);
\end_layout

\begin_layout Plain Layout

disp('Playing at the low-pass sample.');
\end_layout

\begin_layout Plain Layout

sound(filt_y, fs);
\end_layout

\end_inset


\end_layout

\begin_layout Problem
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "48col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Lab 10 Question 1 Figure 1.eps
	width 90text%

\end_inset


\end_layout

\end_inset


\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "48col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Lab 10 Question 1 Figure 2.eps
	width 90text%

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Problem
It can be seen that in the low pass of 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Y(t)
\end_layout

\end_inset

 there are no peaks for frequencies with a magnitude greater than 0.5, indicating
 that these frequencies have been cut off, which is expected as the cut
 off frequency was set at 
\begin_inset Formula $0.45\times10^{4}$
\end_inset

 Hz.
 The sound for the low pass is also lower in tone which is expected as the
 higher frequencies have been removed.
\end_layout

\end_body
\end_document
